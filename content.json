{"pages":[{"title":"About me","text":"I like pepe.⣿⣿⣿⣿⣿⣿⢟⣡⣴⣶⣶⣦⣌⡛⠟⣋⣩⣬⣭⣭⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢰⣿⣿⠿⣛⣛⣙⣛⠻⢆⢻⣿⠿⠿⠿⣿⡄⠻⣿⣿⣿⣿⣿⣿⠃⢠⣿⣿⣶⣿⣿⡿⠿⢟⣛⣒⠐⠲⣶⡶⠿⠶⠶⠦⠄⠙⢿⣿⠋⣠⠄⣿⣿⣿⠟⡛⢅⣠⡵⡐⠲⣶⣶⣥⡠⣤⣵⠆⠄⠰⣦⣤⡀⠇⣰⣿⣼⣿⣿⣧⣤⡸⢿⣿⡀⠂⠁⣸⣿⣿⣿⣿⣇⠄⠈⢀⣿⣿⠿⣰⣿⣿⣿⣿⣿⣿⣿⣷⣤⣈⣙⠶⢾⠭⢉⣁⣴⢯⣭⣵⣶⠾⠓⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣉⣤⣴⣾⣿⣿⣦⣄⣤⣤⣄⠄⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠈⢿⣿⣿⣿⣿⣿⣿⡟⣰⣞⣛⡒⢒⠤⠦⢬⣉⣉⣉⣉⣉⣉⣉⡥⠴⠂⢸⠻⣿⣿⣿⣿⣏⠻⢌⣉⣉⣩⣉⡛⣛⠒⠶⠶⠶⠶⠶⠶⠶⠶⠂⣸⣿⣥⣈⠙⡻⠿⠿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⠿⠛⢉⣠⣶⣶⣿⣿⣿⣿⣿⣶⣬⣅⣒⣒⡂⠈⠭⠭⠭⠭⠭⢉⣁⣄⡀⢾⣿⣿⣿⣿⣿⣿ 一个怕生的友善肥宅，笑点特低，沙雕博主。 主力系统Linux 目前配置i5-4200U16G820M 技能树修电脑, Linux, Openwrt, VMware ESXi, Docker, Photoshop, Java, Kotlin, Python, PHP, Go, C#, C++, Flutter, Android, WEB, SSH(Struts+Spring+Hibernate), Spring Boot.学了4年Java，在校做过1年的Android APP开发，C#物联网应用开发，校外SSH项目开发管理经验1年(ERP系统);C++写过arduino程序玩玩，桌面应用没做过(咸鱼躺);18年接触Kotlin，写Android APP真爽; I LOVE LINUX. 玩过的硬件arduino, raspberry pi, Android arm开发板, 物联网硬件 2019-03-25一隻大學生，在學校摸魚使我快樂（一時摸魚一時爽，一直摸魚一直爽）。還有兩個月就出校實習，想想都有些興奮，趁還在學校多逃幾次課啊哈哈～","link":"/about/index.html"}],"posts":[{"title":"网易云播放器小部件","text":"做了一晚上，终于把自己的Blog给部署上Github了，用的icarus Theme。作为一个爱听歌的肥宅没有点音乐怎么行呢，然后给自己的Blog加了个网易云播放器～ 自己动手，丰衣足食用网易云新建歌单外链的时候提示“由于版权保护，无法生成外链。”，于是乎看了生成外链与歌单的链接格式。歌单链接 https://music.163.com/#/playlist?id=150560845 生成外链 http://music.163.com/#/outchain/0/150560845/ 然后就得出生成外链播放器的方法为 http://music.163.com/#/outchain/0/&lt;playlist-id&gt;/ 照葫芦画瓢查看icarus内widght的写法，然后来学习如何写一个部件吧～，部件的路径为themes/icarus/layout/widget，先看看最简单的links.ejs 和 recent_posts.ejs 吧～123456789101112131415&lt;% const links = get_config_from_obj(widget, &apos;links&apos;); %&gt;&lt;% if (links !== null) { %&gt;&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;div class=&quot;menu&quot;&gt; &lt;h3 class=&quot;menu-label&quot;&gt; &lt;%= __(&apos;widget.links&apos;) %&gt; &lt;/h3&gt; &lt;ul class=&quot;menu-list&quot;&gt; ... &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;% } %&gt; 1234567891011121314&lt;% if (site.posts.length) { %&gt;&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;h3 class=&quot;menu-label&quot;&gt; &lt;%= __(&apos;widget.recents&apos;) %&gt; &lt;/h3&gt; &lt;% site.posts.sort(&apos;date&apos;, -1).limit(5).each(post =&gt; { %&gt; &lt;article class=&quot;media&quot;&gt; ... &lt;/article&gt; &lt;% }) %&gt; &lt;/div&gt;&lt;/div&gt;&lt;% } %&gt; get_config_from_obj(widget, 'links');这函数是从config.yml从widget节点下获取links子元素，__('widget.links')是从languages中的语言文件拿出widget.links对应的语言变量。EJS的语法可以查看EJS docs，其他基础的不多作解释了～ 看完两个部件的模板文件，得出部件的结构如下12345678&lt;div class=\"card widget\"&gt; &lt;div class=\"card-content\"&gt; &lt;h3 class=\"menu-label\"&gt; &lt;!-- 部件标题 --&gt; &lt;/h3&gt; &lt;div&gt; &lt;!-- 小部件内容 --&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 好了，确定结构后就开始敲代码吧！先在themes/icarus/layout/widget做一个cloudmusic.ejs部件模板～1234567891011121314&lt;% const playlistid = get_config_from_obj(widget, &apos;playlist-id&apos;); %&gt; &lt;% if (playlistid !== null) { %&gt; &lt;!-- 判断config.yml中有没有playlistid --&gt;&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;h3 class=&quot;menu-label&quot;&gt; &lt;%= __(&apos;widget.cloudmusic&apos;) %&gt; &lt;!-- 获取语言文件 --&gt; &lt;/h3&gt; &lt;!-- 网易云外链播放器 --&gt; &lt;!-- style=&quot;width: 100%; height: 60vh;&quot; 100%宽度，60vh高度 = 60%页面可视高度--&gt; &lt;iframe id=&quot;cloudmusic&quot; frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; style=&quot;width: 100%; height: 60vh;&quot; src=&quot;//music.163.com/outchain/player?type=0&amp;id=&lt;%= playlistid %&gt;&amp;auto=1&amp;height=430&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;/div&gt;&lt;% } %&gt; 在zh-CN.yml添加上对应的翻译～（我找谷歌娘翻译好11种语言的网易云音乐了¯\\_(ツ)_/¯）123456789...widget: follow: '关注我' recents: '最新文章' links: '链接' tag_cloud: '标签云' catalogue: '目录' cloudmusic: '网易云音乐'... 最后在_config.yml中添加上部件～123456789101112widgets: - ... - # Widget name type: cloudmusic # Where should the widget be placed, left or right position: right # Netease music playlist id playlist-id: '150560845' - ... 最后hexo s运行本地服务器就看到在博客右边多了刚刚做的网易云小部件了～Icarus这个主题每个部件基本都是一个card的元素，可以说是管理部件模板什么的很方便了～","link":"/2019/03/26/cloud-widget/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/03/26/hello-world/"}],"tags":[{"name":"widget","slug":"widget","link":"/tags/widget/"},{"name":"first post","slug":"first-post","link":"/tags/first-post/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"Widgets","slug":"Hexo/Widgets","link":"/categories/Hexo/Widgets/"}]}